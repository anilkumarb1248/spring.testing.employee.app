server.port=2021
server.servlet.context-path=/EmployeeManagement

logging.level.org.springframework=debug
#server.error.whitelabel.enabled=false
server.error.path=/error

# H2 database settings
#spring.datasource.url=jdbc:h2:mem:employee_test
##We can change that behavior by using file-based storage. To do this we need to update the spring.datasource.url:
##spring.datasource.url=jdbc:h2:file:/data/demo
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=employee
#spring.datasource.password=employee
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true


# MySql database settings
#spring.datasource.url = jdbc:mysql://localhost:3306/EMPLOYEE_TEST_DATABASE?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username = employee_test
#spring.datasource.password = employee_test


## Oracle database settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=employee_test
#spring.datasource.password=employee_test
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver


#Configuring two databases
# Oracle database settings
#spring.oracle.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.oracle.datasource.jdbcUrl=jdbc:oracle:thin:@localhost:1521:xe
spring.oracle.datasource.username=employee_test
spring.oracle.datasource.password=employee_test
spring.oracle.datasource.driver-class-name=oracle.jdbc.OracleDriver

# MySql database settings
#spring.mysql.datasource.url = jdbc:mysql://localhost:3306/EMPLOYEE_TEST_DATABASE?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.mysql.datasource.jdbcUrl = jdbc:mysql://localhost:3306/EMPLOYEE_TEST_DATABASE?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.mysql.datasource..jdbc-url=jdbc:mysql://localhost:3306/EMPLOYEE_TEST_DATABASE?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.mysql.datasource.username = employee_test
spring.mysql.datasource.password = employee_test
#spring.mysql.datasource.driver-class-name=com.mysql.jdbc.Driver

## Hibernate Properties
hibernate.oracele.dialect = org.hibernate.dialect.Oracle10gDialect
hibernate.mysql.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.hbm2ddl.auto = create
hibernate.show-sql=true

#Hikari Connection pool configuration
spring.oracle.datasource.hikari.connection-timeout = 60000
spring.oracle.datasource.hikari.minimum-idle= 10
spring.oracle.datasource.hikari.maximum-pool-size= 10
spring.oracle.datasource.hikari.idle-timeout=10000
spring.oracle.datasource.hikari.max-lifetime= 1000
spring.oracle.datasource.hikari.auto-commit =true

spring.mysql.datasource.hikari.connection-timeout = 60000
spring.mysql.datasource.hikari.minimum-idle= 10
spring.mysql.datasource.hikari.maximum-pool-size= 10
spring.mysql.datasource.hikari.idle-timeout=10000
spring.mysql.datasource.hikari.max-lifetime= 1000
spring.mysql.datasource.hikari.auto-commit =true

### Hibernate Properties
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle10gDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.show-sql=true

### Hikari Connection pool configuration
##maximum number of milliseconds that a client will wait for a connection
#spring.datasource.hikari.connection-timeout = 60000
##minimum number of idle connections maintained by HikariCP in a connection pool
#spring.datasource.hikari.minimum-idle= 10
##maximum pool size
#spring.datasource.hikari.maximum-pool-size= 10
##maximum idle time for connection
#spring.datasource.hikari.idle-timeout=10000
## maximum lifetime in milliseconds of a connection in the pool after it is closed
#spring.datasource.hikari.max-lifetime= 1000
##default auto-commit behavior
#spring.datasource.hikari.auto-commit =true